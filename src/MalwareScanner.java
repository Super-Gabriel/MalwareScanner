import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.io.*;
import src.BinarySearchTree;

/**
 * @author - Angel Gabriel Sanchez Pavia (>.<)
 * @version - 1.0 | 14/11/22
 */
public class MalwareScanner {
    
    final String apiKey;
    
    public static void main(String[] args) throws IOException, InterruptedException {
	String key;
	//poner aqui abajo tu ApiKey
	//put ur ApiKey down here
        key = "";

	//seteando el apiKey
        MalwareScanner ms = new MalwareScanner(key);
	
	//verificando uno por uno los hash, 4 cada 1 minuto
	String sha = "";
	String direccion = "hash/sha256.txt";
	BinarySearchTree tree = new BinarySearchTree();
	
	try{
	    BufferedReader bf = new BufferedReader(new FileReader(direccion));
	    //numero de reviciones
	    int noRev = 0;
	    int contador = 1;	    
	    
	    while((sha = bf.readLine()) != null){
		if(noRev==4){
		    noRev = 0;
		    //esperando 1 minuto cada 4 reviciones
		    System.out.println("Esperando 1 minuto |:");
		    Thread.sleep(60*1000);
		}
		//obteniendo el string del reporte dado el sha
		String report = ms.getShaReport(sha);
		System.out.println("*** Archivo "+contador+" ***");
		//obteniendo el promedio dado un reporte en String
		double promedio = ms.getShaAvg(report);
		System.out.println("promedio: "+promedio+"\n");

		//agregando el numero de archivo y el promedio a un arbol de
		//busqueda
		tree.insert(contador, promedio);
		
		noRev++;
		contador++;
	    }
	}catch(Exception e){
	    System.out.println("no se encontrÃ³ el archivo");
	}

	System.out.println("*** De menor a mayor amenaza ***");
	System.out.println(tree.inOrder());
    
    }

    /**metodo constructor*/
    public MalwareScanner(String key){
        this.apiKey = key;
    }
    
    /**
     * metodo para obtener el promedio de cuantos antiviurs 
     * detectaron un archivo como amenaza dado el sha256
     * @param report - el reporte de sha256 en String 
     * @return - promedio de que tan peiligroso es (casos positivos entre totales)
     */
    public double getShaAvg(String report){
        
        String palabra = "";
        double avg ;
        
        //situando el index i en el inicio de los casos totales
        int i = 0;
        while(!palabra.equals("\"total\":")){//hasta que llegemos a "totales"
            
            //mientras no haya un espacio en el reporte
            if(report.charAt(i)!=' '){
                palabra+=report.charAt(i);
            }else{//reseteando la palabra cada que hay un espacio
                //System.out.println(palabra);
                palabra = "";
            }
            
            i++;
        }
        i++;
        
        //obteniendo los casos totales en un string
        String totals = "";
        while(report.charAt(i)!=','){
            totals += report.charAt(i);
            i++;
        }
        i += 15;
        
        //obteniendo los casos positivos
        String positives = "";
        while(report.charAt(i)!=','){
            positives += report.charAt(i);
            i++;
        }
        
        //convirtiendo las cadenas en enteros
        int t = Integer.parseInt(totals);
        int p = Integer.parseInt(positives);
        
        //calculando el promedio
        avg = (double) p/t;
        
        System.out.println("totales: "+t+"\npositivos: "+p);
        
        return avg;
    }
    
    /**
     * metodo para obtener un reporte de sha256 en String
     * @param sha - sha256 del archivo
     * @param key - la apiKey del usuario
     * @return - el reporte de amenaza de virustotal en String
     * @throws java.io.IOException
     * @throws java.lang.InterruptedException
     */
    public String getShaReport(String sha) throws IOException, InterruptedException{
        String form = "";
        //creando url de peticion
        String url = "https://www.virustotal.com/vtapi/v2/file/report?apikey="+apiKey+"&resource="+sha+"&allinfo=false";
        
        try{
            HttpRequest request = HttpRequest.newBuilder()
            .uri(URI.create(url))
            .method("GET", HttpRequest.BodyPublishers.noBody())
            .build();
            HttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString()); 
            form = response.body();
        }catch(IOException | InterruptedException e){
            System.out.println("error al mandar reporte");
        }
        
        return form;
    }
    
}
